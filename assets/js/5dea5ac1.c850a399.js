"use strict";(self.webpackChunk_docsearch_website=self.webpackChunk_docsearch_website||[]).push([[16],{7632:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"how-do-we-build-an-index","title":"How do we build a DocSearch index?","description":"In this section you will learn how we build a DocSearch index from your page.","source":"@site/versioned_docs/version-legacy/how-do-we-build-an-index.mdx","sourceDirName":".","slug":"/how-do-we-build-an-index","permalink":"/docs/legacy/how-do-we-build-an-index","draft":false,"unlisted":false,"editUrl":"https://github.com/PI-Open-Data-Portal/PI-Open-Data-Portal.github.io/edit/main/versioned_docs/version-legacy/how-do-we-build-an-index.mdx","tags":[],"version":"legacy","lastUpdatedBy":"brunotavaresz","lastUpdatedAt":1740179180000,"frontMatter":{"title":"How do we build a DocSearch index?"},"sidebar":"docs","previous":{"title":"Config Files","permalink":"/docs/legacy/config-file"},"next":{"title":"Run your own","permalink":"/docs/legacy/run-your-own"}}');var i=n(4848),r=n(8453),d=n(9030);const a={title:"How do we build a DocSearch index?"},l=void 0,s={},h=[{value:"Everything starts from your page",id:"everything-starts-from-your-page",level:2},{value:"We extract the payload with to your set of <code>selectors</code>",id:"we-extract-the-payload-with-to-your-set-of-selectors",level:2},{value:"We iterate through the HTML flow and build the payload",id:"we-iterate-through-the-html-flow-and-build-the-payload",level:2},{value:"We iterate through the payload and start pushing records",id:"we-iterate-through-the-payload-and-start-pushing-records",level:2},{value:"We pile up the elements based on the current temporary record",id:"we-pile-up-the-elements-based-on-the-current-temporary-record",level:2},{value:"We iterate until we match a <code>text</code> element",id:"we-iterate-until-we-match-a-text-element",level:2},{value:"We override the text element when we find a newer one",id:"we-override-the-text-element-when-we-find-a-newer-one",level:2},{value:"We remove the stashed, deeper elements when we add a higher level",id:"we-remove-the-stashed-deeper-elements-when-we-add-a-higher-level",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"In this section you will learn how we build a DocSearch index from your page."}),"\n",(0,i.jsx)(t.h2,{id:"everything-starts-from-your-page",children:"Everything starts from your page"}),"\n",(0,i.jsx)("img",{src:(0,d.Ay)("img/build_index/how_do_we_build_docsearch_index_1.png"),alt:"1st step"}),"\n",(0,i.jsxs)(t.h2,{id:"we-extract-the-payload-with-to-your-set-of-selectors",children:["We extract the payload with to your set of ",(0,i.jsx)(t.code,{children:"selectors"})]}),"\n",(0,i.jsx)("img",{src:(0,d.Ay)("img/build_index/how_do_we_build_docsearch_index_2.png"),alt:"2nd step"}),"\n",(0,i.jsx)(t.p,{children:"We will focus on the highlighted information depending on your selectors."}),"\n",(0,i.jsx)(t.h2,{id:"we-iterate-through-the-html-flow-and-build-the-payload",children:"We iterate through the HTML flow and build the payload"}),"\n",(0,i.jsx)("img",{src:(0,d.Ay)("img/build_index/how_do_we_build_docsearch_index_3.png"),alt:"3rd step"}),"\n",(0,i.jsx)(t.p,{children:"This payload will be the only data extracted from your page."}),"\n",(0,i.jsx)(t.h2,{id:"we-iterate-through-the-payload-and-start-pushing-records",children:"We iterate through the payload and start pushing records"}),"\n",(0,i.jsx)("img",{src:(0,d.Ay)("img/build_index/how_do_we_build_docsearch_index_4.png"),alt:"4th step"}),"\n",(0,i.jsxs)(t.p,{children:["We index the temporary record when we add an element to it (if ",(0,i.jsx)(t.code,{children:"min_indexed_level"})," equals ",(0,i.jsx)(t.code,{children:"0"}),")"]}),"\n",(0,i.jsx)(t.h2,{id:"we-pile-up-the-elements-based-on-the-current-temporary-record",children:"We pile up the elements based on the current temporary record"}),"\n",(0,i.jsx)("img",{src:(0,d.Ay)("img/build_index/how_do_we_build_docsearch_index_5.png"),alt:"5th step"}),"\n",(0,i.jsx)(t.p,{children:"Based on the position within the flow, we nest elements as much as possible to keep the context and increase the relevancy."}),"\n",(0,i.jsxs)(t.h2,{id:"we-iterate-until-we-match-a-text-element",children:["We iterate until we match a ",(0,i.jsx)(t.code,{children:"text"})," element"]}),"\n",(0,i.jsx)("img",{src:(0,d.Ay)("img/build_index/how_do_we_build_docsearch_index_6.png"),alt:"6th step"}),"\n",(0,i.jsx)(t.h2,{id:"we-override-the-text-element-when-we-find-a-newer-one",children:"We override the text element when we find a newer one"}),"\n",(0,i.jsx)("img",{src:(0,d.Ay)("img/build_index/how_do_we_build_docsearch_index_7.png"),alt:"7th step"}),"\n",(0,i.jsx)(t.h2,{id:"we-remove-the-stashed-deeper-elements-when-we-add-a-higher-level",children:"We remove the stashed, deeper elements when we add a higher level"}),"\n",(0,i.jsx)("img",{src:(0,d.Ay)("img/build_index/how_do_we_build_docsearch_index_8.png"),alt:"8th step"}),"\n",(0,i.jsx)(t.p,{children:"Contextual information and hierarchy must be updated once we encounter a new level. We are doing that because it highlights a new sub-section not related to the previous one."}),"\n",(0,i.jsxs)(t.p,{children:["If you need any further information, please connect with us on ",(0,i.jsx)(t.a,{href:"https://alg.li/discord",children:"Discord"})," or let our ",(0,i.jsx)(t.a,{href:"https://support.algolia.com/",children:"support"})," team know."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var o=n(6540);const i={},r=o.createContext(i);function d(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);