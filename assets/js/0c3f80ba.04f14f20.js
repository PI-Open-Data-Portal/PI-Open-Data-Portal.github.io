"use strict";(self.webpackChunk_docsearch_website=self.webpackChunk_docsearch_website||[]).push([[160],{5114:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"templates","title":"Config Templates","description":"To help you create the best search experience for your users, we provide out-of-the-box crawler config templates for multiple websites generators. If you\'d like to add a new template to our list, or believe we should update an existing one, please let us know on Discord or open a pull request.","source":"@site/docs/templates.mdx","sourceDirName":".","slug":"/templates","permalink":"/docs/templates","draft":false,"unlisted":false,"editUrl":"https://github.com/PI-Open-Data-Portal/PI-Open-Data-Portal.github.io/edit/main/docs/templates.mdx","tags":[],"version":"current","lastUpdatedBy":"brunotavaresz","lastUpdatedAt":1740179180000,"frontMatter":{"title":"Config Templates"},"sidebar":"docs","previous":{"title":"Record Extractor","permalink":"/docs/record-extractor"},"next":{"title":"Manage your crawls","permalink":"/docs/manage-your-crawls"}}');var a=t(4848),i=t(8453);t(9030);const l={title:"Config Templates"},o=void 0,s={},c=[{value:"Getting Started",id:"getting-started",level:2},{value:"Updating the Template",id:"updating-the-template",level:2},{value:"Default Template",id:"default-template",level:2},{value:"Docusaurus v1 Template",id:"docusaurus-v1-template",level:2},{value:"Docusaurus v2 &amp; v3 Template",id:"docusaurus-v2--v3-template",level:2},{value:"Astro Starlight Template",id:"astro-starlight-template",level:2},{value:"Vuepress v1 Template",id:"vuepress-v1-template",level:2},{value:"Vuepress v2 Template",id:"vuepress-v2-template",level:2},{value:"Vitepress Template",id:"vitepress-template",level:2},{value:"pkgdown Template",id:"pkgdown-template",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["To help you create the best search experience for your users, we provide out-of-the-box crawler config templates for multiple websites generators. If you'd like to add a new template to our list, or believe we should update an existing one, please ",(0,a.jsx)(n.a,{href:"https://alg.li/discord",children:"let us know on Discord"})," or ",(0,a.jsx)(n.a,{href:"https://github.com/algolia/docsearch",children:"open a pull request"}),"."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["If you want to better understand the default parameters of the configs below, take a look at the ",(0,a.jsx)(n.a,{href:"https://www.algolia.com/doc/tools/crawler/apis/configuration/",children:"Crawler documentation"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsx)(n.p,{children:"Once approved for DocSearch, we will automatically create a Crawler on your behalf, include your URL, and the Algolia creditials for your appId, apiKey, and indexName. If we detected that you are using any of the predefined generators, we'll attempt to automatically assign the proper template that matches your generator. However, this is not gauranteed. If no specific generator is detected, we will apply the default template seen below."}),"\n",(0,a.jsx)(n.h2,{id:"updating-the-template",children:"Updating the Template"}),"\n",(0,a.jsx)(n.p,{children:'You can manually update the crawler template by going to dashboard.algolia.com, click "Data sources", select your crawler, and go to the editor page. From there you can edit the Javascript directly. Note that you can make draft changes without saving, test the changes using the "URL Tester", and then "Save" once you\'re happy with your changes.'}),"\n",(0,a.jsx)(n.h2,{id:"default-template",children:"Default Template"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"default.js"}),(0,a.jsx)("div",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"new Crawler({\n  appId: 'YOUR_APP_ID',\n  apiKey: 'YOUR_API_KEY',\n  indexPrefix: 'crawler_',\n  rateLimit: 8,\n  maxDepth: 10,\n  startUrls: ['https://YOUR_WEBSITE_URL'],\n  renderJavaScript: false,\n  sitemaps: [],\n  ignoreCanonicalTo: false,\n  discoveryPatterns: ['https://YOUR_WEBSITE_URL/**'],\n  actions: [\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/**'],\n      recordExtractor: ({ helpers }) => {\n        return helpers.docsearch({\n          recordProps: {\n            lvl1: ['header h1', 'article h1', 'main h1', 'h1', 'head > title'],\n            content: ['article p, article li', 'main p, main li', 'p, li'],\n            lvl0: {\n              selectors: '',\n              defaultValue: 'Documentation',\n            },\n            lvl2: ['article h2', 'main h2', 'h2'],\n            lvl3: ['article h3', 'main h3', 'h3'],\n            lvl4: ['article h4', 'main h4', 'h4'],\n            lvl5: ['article h5', 'main h5', 'h5'],\n            lvl6: ['article h6', 'main h6', 'h6'],\n          },\n          aggregateContent: true,\n          recordVersion: 'v3',\n        });\n      },\n    },\n  ],\n  initialIndexSettings: {\n    YOUR_INDEX_NAME: {\n      attributesForFaceting: ['type', 'lang'],\n      attributesToRetrieve: [\n        'hierarchy',\n        'content',\n        'anchor',\n        'url',\n        'url_without_anchor',\n        'type',\n      ],\n      attributesToHighlight: ['hierarchy', 'content'],\n      attributesToSnippet: ['content:10'],\n      camelCaseAttributes: ['hierarchy', 'content'],\n      searchableAttributes: [\n        'unordered(hierarchy.lvl0)',\n        'unordered(hierarchy.lvl1)',\n        'unordered(hierarchy.lvl2)',\n        'unordered(hierarchy.lvl3)',\n        'unordered(hierarchy.lvl4)',\n        'unordered(hierarchy.lvl5)',\n        'unordered(hierarchy.lvl6)',\n        'content',\n      ],\n      distinct: true,\n      attributeForDistinct: 'url',\n      customRanking: [\n        'desc(weight.pageRank)',\n        'desc(weight.level)',\n        'asc(weight.position)',\n      ],\n      ranking: [\n        'words',\n        'filters',\n        'typo',\n        'attribute',\n        'proximity',\n        'exact',\n        'custom',\n      ],\n      highlightPreTag: '<span class=\"algolia-docsearch-suggestion--highlight\">',\n      highlightPostTag: '</span>',\n      minWordSizefor1Typo: 3,\n      minWordSizefor2Typos: 7,\n      allowTyposOnNumericTokens: false,\n      minProximity: 1,\n      ignorePlurals: true,\n      advancedSyntax: true,\n      attributeCriteriaComputedByMinProximity: true,\n      removeWordsIfNoResults: 'allOptional',\n    },\n  },\n});\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"docusaurus-v1-template",children:"Docusaurus v1 Template"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"docusaurus-v1.js"}),(0,a.jsx)("div",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"new Crawler({\n  appId: 'YOUR_APP_ID',\n  apiKey: 'YOUR_API_KEY',\n  rateLimit: 8,\n  maxDepth: 10,\n  startUrls: [\n    'https://YOUR_WEBSITE_URL/docs/',\n    'https://YOUR_WEBSITE_URL/',\n    'https://YOUR_WEBSITE_URL/blog/',\n  ],\n  sitemaps: ['https://YOUR_WEBSITE_URL/sitemap.xml'],\n  ignoreCanonicalTo: false,\n  discoveryPatterns: ['https://YOUR_WEBSITE_URL/**'],\n  actions: [\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/docs/**'],\n      recordExtractor: ({ $, helpers }) => {\n        // Removing DOM elements we don't want to crawl\n        const toRemove = '.hash-link';\n        $(toRemove).remove();\n\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: '.navBreadcrumb h2 span',\n              defaultValue: 'Docs',\n            },\n            lvl1: '.post h1',\n            lvl2: '.post h2',\n            lvl3: '.post h3',\n            lvl4: '.post h4',\n            content: '.post article p, .post article li',\n            tags: {\n              defaultValue: ['docs'],\n            },\n          },\n          indexHeadings: true,\n          aggregateContent: true,\n        });\n      },\n    },\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/blog/**'],\n      recordExtractor: ({ $, helpers }) => {\n        // Removing DOM elements we don't want to crawl\n        const toRemove = '.hash-link';\n        $(toRemove).remove();\n\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: '.navBreadcrumb h2 span',\n              defaultValue: 'Blog',\n            },\n            lvl1: '.post h1',\n            lvl2: '.post h2',\n            lvl3: '.post h3',\n            lvl4: '.post h4',\n            content: '.post article p, .post article li',\n            tags: {\n              defaultValue: ['blog'],\n            },\n          },\n          indexHeadings: true,\n          aggregateContent: true,\n        });\n      },\n    },\n  ],\n  initialIndexSettings: {\n    YOUR_INDEX_NAME: {\n      attributesForFaceting: ['type', 'lang', 'language', 'version', 'tags'],\n      attributesToRetrieve: [\n        'hierarchy',\n        'content',\n        'anchor',\n        'url',\n        'url_without_anchor',\n        'type',\n      ],\n      attributesToHighlight: ['hierarchy', 'hierarchy_camel', 'content'],\n      attributesToSnippet: ['content:10'],\n      camelCaseAttributes: ['hierarchy', 'hierarchy_radio', 'content'],\n      searchableAttributes: [\n        'unordered(hierarchy_radio_camel.lvl0)',\n        'unordered(hierarchy_radio.lvl0)',\n        'unordered(hierarchy_radio_camel.lvl1)',\n        'unordered(hierarchy_radio.lvl1)',\n        'unordered(hierarchy_radio_camel.lvl2)',\n        'unordered(hierarchy_radio.lvl2)',\n        'unordered(hierarchy_radio_camel.lvl3)',\n        'unordered(hierarchy_radio.lvl3)',\n        'unordered(hierarchy_radio_camel.lvl4)',\n        'unordered(hierarchy_radio.lvl4)',\n        'unordered(hierarchy_radio_camel.lvl5)',\n        'unordered(hierarchy_radio.lvl5)',\n        'unordered(hierarchy_radio_camel.lvl6)',\n        'unordered(hierarchy_radio.lvl6)',\n        'unordered(hierarchy_camel.lvl0)',\n        'unordered(hierarchy.lvl0)',\n        'unordered(hierarchy_camel.lvl1)',\n        'unordered(hierarchy.lvl1)',\n        'unordered(hierarchy_camel.lvl2)',\n        'unordered(hierarchy.lvl2)',\n        'unordered(hierarchy_camel.lvl3)',\n        'unordered(hierarchy.lvl3)',\n        'unordered(hierarchy_camel.lvl4)',\n        'unordered(hierarchy.lvl4)',\n        'unordered(hierarchy_camel.lvl5)',\n        'unordered(hierarchy.lvl5)',\n        'unordered(hierarchy_camel.lvl6)',\n        'unordered(hierarchy.lvl6)',\n        'content',\n      ],\n      distinct: true,\n      attributeForDistinct: 'url',\n      customRanking: [\n        'desc(weight.pageRank)',\n        'desc(weight.level)',\n        'asc(weight.position)',\n      ],\n      ranking: [\n        'words',\n        'filters',\n        'typo',\n        'attribute',\n        'proximity',\n        'exact',\n        'custom',\n      ],\n      highlightPreTag: '<span class=\"algolia-docsearch-suggestion--highlight\">',\n      highlightPostTag: '</span>',\n      minWordSizefor1Typo: 3,\n      minWordSizefor2Typos: 7,\n      allowTyposOnNumericTokens: false,\n      minProximity: 1,\n      ignorePlurals: true,\n      advancedSyntax: true,\n      attributeCriteriaComputedByMinProximity: true,\n      removeWordsIfNoResults: 'allOptional',\n    },\n  },\n});\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"docusaurus-v2--v3-template",children:"Docusaurus v2 & v3 Template"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"docusaurus-v2.js"}),(0,a.jsx)("div",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"new Crawler({\n  appId: 'YOUR_APP_ID',\n  apiKey: 'YOUR_API_KEY',\n  rateLimit: 8,\n  maxDepth: 10,\n  startUrls: ['https://YOUR_WEBSITE_URL/'],\n  sitemaps: ['https://YOUR_WEBSITE_URL/sitemap.xml'],\n  ignoreCanonicalTo: true,\n  discoveryPatterns: ['https://YOUR_WEBSITE_URL/**'],\n  actions: [\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/**'],\n      recordExtractor: ({ $, helpers }) => {\n        // priority order: deepest active sub list header -> navbar active item -> 'Documentation'\n        const lvl0 =\n          $(\n            '.menu__link.menu__link--sublist.menu__link--active, .navbar__item.navbar__link--active'\n          )\n            .last()\n            .text() || 'Documentation';\n\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: '',\n              defaultValue: lvl0,\n            },\n            lvl1: ['header h1', 'article h1'],\n            lvl2: 'article h2',\n            lvl3: 'article h3',\n            lvl4: 'article h4',\n            lvl5: 'article h5, article td:first-child',\n            lvl6: 'article h6',\n            content: 'article p, article li, article td:last-child',\n          },\n          indexHeadings: true,\n          aggregateContent: true,\n          recordVersion: 'v3',\n        });\n      },\n    },\n  ],\n  initialIndexSettings: {\n    YOUR_INDEX_NAME: {\n      attributesForFaceting: [\n        'type',\n        'lang',\n        'language',\n        'version',\n        'docusaurus_tag',\n      ],\n      attributesToRetrieve: [\n        'hierarchy',\n        'content',\n        'anchor',\n        'url',\n        'url_without_anchor',\n        'type',\n      ],\n      attributesToHighlight: ['hierarchy', 'content'],\n      attributesToSnippet: ['content:10'],\n      camelCaseAttributes: ['hierarchy', 'content'],\n      searchableAttributes: [\n        'unordered(hierarchy.lvl0)',\n        'unordered(hierarchy.lvl1)',\n        'unordered(hierarchy.lvl2)',\n        'unordered(hierarchy.lvl3)',\n        'unordered(hierarchy.lvl4)',\n        'unordered(hierarchy.lvl5)',\n        'unordered(hierarchy.lvl6)',\n        'content',\n      ],\n      distinct: true,\n      attributeForDistinct: 'url',\n      customRanking: [\n        'desc(weight.pageRank)',\n        'desc(weight.level)',\n        'asc(weight.position)',\n      ],\n      ranking: [\n        'words',\n        'filters',\n        'typo',\n        'attribute',\n        'proximity',\n        'exact',\n        'custom',\n      ],\n      highlightPreTag: '<span class=\"algolia-docsearch-suggestion--highlight\">',\n      highlightPostTag: '</span>',\n      minWordSizefor1Typo: 3,\n      minWordSizefor2Typos: 7,\n      allowTyposOnNumericTokens: false,\n      minProximity: 1,\n      ignorePlurals: true,\n      advancedSyntax: true,\n      attributeCriteriaComputedByMinProximity: true,\n      removeWordsIfNoResults: 'allOptional',\n      separatorsToIndex: '_',\n    },\n  },\n});\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"astro-starlight-template",children:"Astro Starlight Template"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"starlight.js"}),(0,a.jsx)("div",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"new Crawler({\n  appId: 'YOUR_APP_ID',\n  apiKey: 'YOUR_API_KEY',\n  rateLimit: 8,\n  maxDepth: 10,\n  startUrls: ['https://YOUR_WEBSITE_URL/'],\n  sitemaps: ['https://YOUR_WEBSITE_URL/sitemap-index.xml'],\n  ignoreCanonicalTo: true,\n  discoveryPatterns: ['https://YOUR_WEBSITE_URL/**'],\n  actions: [\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/**'],\n      recordExtractor: ({ $, helpers }) => {\n        // Get the top level menu item\n        const lvl0 =\n          $('details:has(a[aria-current=\"page\"])')\n            .find(\"summary\")\n            .find(\"span\")\n            .text() || \"Documentation\";\n\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: \"\",\n              defaultValue: lvl0,\n            },\n            lvl1: \"main h1\",\n            lvl2: \"main h2\",\n            lvl3: \"main h3\",\n            lvl4: \"main h4\",\n            lvl5: \"main h5\",\n            lvl6: \"main h6\",\n            content: \"main p, main li\",\n          },\n          indexHeadings: true,\n          aggregateContent: true,\n        });\n      },\n    },\n  ],\n  initialIndexSettings: {\n    YOUR_INDEX_NAME: {\n      attributesForFaceting: [\n        'type',\n        'lang',\n      ],\n      attributesToRetrieve: [\n        'hierarchy',\n        'content',\n        'anchor',\n        'url',\n      ],\n      attributesToHighlight: ['hierarchy', 'content'],\n      attributesToSnippet: ['content:10'],\n      camelCaseAttributes: ['hierarchy', 'content'],\n      searchableAttributes: [\n        'unordered(hierarchy.lvl0)',\n        'unordered(hierarchy.lvl1)',\n        'unordered(hierarchy.lvl2)',\n        'unordered(hierarchy.lvl3)',\n        'unordered(hierarchy.lvl4)',\n        'unordered(hierarchy.lvl5)',\n        'unordered(hierarchy.lvl6)',\n        'content',\n      ],\n      distinct: true,\n      attributeForDistinct: 'url',\n      customRanking: [\n        'desc(weight.pageRank)',\n        'desc(weight.level)',\n        'asc(weight.position)',\n      ],\n      ranking: [\n        'words',\n        'filters',\n        'typo',\n        'attribute',\n        'proximity',\n        'exact',\n        'custom',\n      ],\n      highlightPreTag: '<span class=\"algolia-docsearch-suggestion--highlight\">',\n      highlightPostTag: '</span>',\n      minWordSizefor1Typo: 3,\n      minWordSizefor2Typos: 7,\n      allowTyposOnNumericTokens: false,\n      minProximity: 1,\n      ignorePlurals: true,\n      advancedSyntax: true,\n      attributeCriteriaComputedByMinProximity: true,\n      removeWordsIfNoResults: 'allOptional',\n    },\n  },\n});\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"vuepress-v1-template",children:"Vuepress v1 Template"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"vuepress-v1.js"}),(0,a.jsx)("div",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"new Crawler({\n  appId: 'YOUR_APP_ID',\n  apiKey: 'YOUR_API_KEY',\n  rateLimit: 8,\n  maxDepth: 10,\n  startUrls: ['https://YOUR_WEBSITE_URL/'],\n  sitemaps: ['https://YOUR_WEBSITE_URL/sitemap.xml'],\n  ignoreCanonicalTo: false,\n  discoveryPatterns: ['https://YOUR_WEBSITE_URL/**'],\n  actions: [\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/**'],\n      recordExtractor: ({ $, helpers }) => {\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: 'p.sidebar-heading.open',\n              defaultValue: 'Documentation',\n            },\n            lvl1: '.content__default h1',\n            lvl2: '.content__default h2',\n            lvl3: '.content__default h3',\n            lvl4: '.content__default h4',\n            lvl5: '.content__default h5',\n            content: '.content__default p, .content__default li',\n          },\n          indexHeadings: true,\n          aggregateContent: true,\n        });\n      },\n    },\n  ],\n  initialIndexSettings: {\n    YOUR_INDEX_NAME: {\n      attributesForFaceting: ['type', 'lang'],\n      attributesToRetrieve: ['hierarchy', 'content', 'anchor', 'url'],\n      attributesToHighlight: ['hierarchy', 'hierarchy_camel', 'content'],\n      attributesToSnippet: ['content:10'],\n      camelCaseAttributes: ['hierarchy', 'hierarchy_radio', 'content'],\n      searchableAttributes: [\n        'unordered(hierarchy_radio_camel.lvl0)',\n        'unordered(hierarchy_radio.lvl0)',\n        'unordered(hierarchy_radio_camel.lvl1)',\n        'unordered(hierarchy_radio.lvl1)',\n        'unordered(hierarchy_radio_camel.lvl2)',\n        'unordered(hierarchy_radio.lvl2)',\n        'unordered(hierarchy_radio_camel.lvl3)',\n        'unordered(hierarchy_radio.lvl3)',\n        'unordered(hierarchy_radio_camel.lvl4)',\n        'unordered(hierarchy_radio.lvl4)',\n        'unordered(hierarchy_radio_camel.lvl5)',\n        'unordered(hierarchy_radio.lvl5)',\n        'unordered(hierarchy_radio_camel.lvl6)',\n        'unordered(hierarchy_radio.lvl6)',\n        'unordered(hierarchy_camel.lvl0)',\n        'unordered(hierarchy.lvl0)',\n        'unordered(hierarchy_camel.lvl1)',\n        'unordered(hierarchy.lvl1)',\n        'unordered(hierarchy_camel.lvl2)',\n        'unordered(hierarchy.lvl2)',\n        'unordered(hierarchy_camel.lvl3)',\n        'unordered(hierarchy.lvl3)',\n        'unordered(hierarchy_camel.lvl4)',\n        'unordered(hierarchy.lvl4)',\n        'unordered(hierarchy_camel.lvl5)',\n        'unordered(hierarchy.lvl5)',\n        'unordered(hierarchy_camel.lvl6)',\n        'unordered(hierarchy.lvl6)',\n        'content',\n      ],\n      distinct: true,\n      attributeForDistinct: 'url',\n      customRanking: [\n        'desc(weight.pageRank)',\n        'desc(weight.level)',\n        'asc(weight.position)',\n      ],\n      ranking: [\n        'words',\n        'filters',\n        'typo',\n        'attribute',\n        'proximity',\n        'exact',\n        'custom',\n      ],\n      highlightPreTag: '<span class=\"algolia-docsearch-suggestion--highlight\">',\n      highlightPostTag: '</span>',\n      minWordSizefor1Typo: 3,\n      minWordSizefor2Typos: 7,\n      allowTyposOnNumericTokens: false,\n      minProximity: 1,\n      ignorePlurals: true,\n      advancedSyntax: true,\n      attributeCriteriaComputedByMinProximity: true,\n      removeWordsIfNoResults: 'allOptional',\n    },\n  },\n});\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"vuepress-v2-template",children:"Vuepress v2 Template"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"vuepress-v2.js"}),(0,a.jsx)("div",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"new Crawler({\n  appId: 'YOUR_APP_ID',\n  apiKey: 'YOUR_API_KEY',\n  rateLimit: 8,\n  maxDepth: 10,\n  startUrls: ['https://YOUR_WEBSITE_URL/'],\n  sitemaps: ['https://YOUR_WEBSITE_URL/sitemap.xml'],\n  ignoreCanonicalTo: false,\n  discoveryPatterns: ['https://YOUR_WEBSITE_URL/**'],\n  actions: [\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/**'],\n      recordExtractor: ({ $, helpers }) => {\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: '.sidebar-heading.active',\n              defaultValue: 'Documentation',\n            },\n            lvl1: '.theme-default-content h1',\n            lvl2: '.theme-default-content h2',\n            lvl3: '.theme-default-content h3',\n            lvl4: '.theme-default-content h4',\n            lvl5: '.theme-default-content h5',\n            content: '.theme-default-content p, .theme-default-content li',\n          },\n          indexHeadings: true,\n          aggregateContent: true,\n          recordVersion: 'v3',\n        });\n      },\n    },\n  ],\n  initialIndexSettings: {\n    YOUR_INDEX_NAME: {\n      attributesForFaceting: ['type', 'lang'],\n      attributesToRetrieve: ['hierarchy', 'content', 'anchor', 'url'],\n      attributesToHighlight: ['hierarchy', 'content'],\n      attributesToSnippet: ['content:10'],\n      camelCaseAttributes: ['hierarchy', 'content'],\n      searchableAttributes: [\n        'unordered(hierarchy.lvl0)',\n        'unordered(hierarchy.lvl1)',\n        'unordered(hierarchy.lvl2)',\n        'unordered(hierarchy.lvl3)',\n        'unordered(hierarchy.lvl4)',\n        'unordered(hierarchy.lvl5)',\n        'unordered(hierarchy.lvl6)',\n        'content',\n      ],\n      distinct: true,\n      attributeForDistinct: 'url',\n      customRanking: [\n        'desc(weight.pageRank)',\n        'desc(weight.level)',\n        'asc(weight.position)',\n      ],\n      ranking: [\n        'words',\n        'filters',\n        'typo',\n        'attribute',\n        'proximity',\n        'exact',\n        'custom',\n      ],\n      highlightPreTag: '<span class=\"algolia-docsearch-suggestion--highlight\">',\n      highlightPostTag: '</span>',\n      minWordSizefor1Typo: 3,\n      minWordSizefor2Typos: 7,\n      allowTyposOnNumericTokens: false,\n      minProximity: 1,\n      ignorePlurals: true,\n      advancedSyntax: true,\n      attributeCriteriaComputedByMinProximity: true,\n      removeWordsIfNoResults: 'allOptional',\n    },\n  },\n});\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"vitepress-template",children:"Vitepress Template"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"vitepress.js"}),(0,a.jsx)("div",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"new Crawler({\n  appId: 'YOUR_APP_ID',\n  apiKey: 'YOUR_API_KEY',\n  rateLimit: 8,\n  maxDepth: 10,\n  startUrls: ['https://YOUR_WEBSITE_URL/'],\n  sitemaps: ['https://YOUR_WEBSITE_URL/sitemap.xml'],\n  discoveryPatterns: ['https://YOUR_WEBSITE_URL/**'],\n  actions: [\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/**'],\n      recordExtractor: ({ $, helpers }) => {\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: '',\n              defaultValue: 'Documentation',\n            },\n            lvl1: '.content h1',\n            lvl2: '.content h2',\n            lvl3: '.content h3',\n            lvl4: '.content h4',\n            lvl5: '.content h5',\n            content: '.content p, .content li',\n          },\n          indexHeadings: true,\n          aggregateContent: true,\n          recordVersion: 'v3',\n        });\n      },\n    },\n  ],\n  initialIndexSettings: {\n    YOUR_INDEX_NAME: {\n      attributesForFaceting: ['type', 'lang'],\n      attributesToRetrieve: ['hierarchy', 'content', 'anchor', 'url'],\n      attributesToHighlight: ['hierarchy', 'content'],\n      attributesToSnippet: ['content:10'],\n      camelCaseAttributes: ['hierarchy', 'content'],\n      searchableAttributes: [\n        'unordered(hierarchy.lvl0)',\n        'unordered(hierarchy.lvl1)',\n        'unordered(hierarchy.lvl2)',\n        'unordered(hierarchy.lvl3)',\n        'unordered(hierarchy.lvl4)',\n        'unordered(hierarchy.lvl5)',\n        'unordered(hierarchy.lvl6)',\n        'content',\n      ],\n      distinct: true,\n      attributeForDistinct: 'url',\n      customRanking: [\n        'desc(weight.pageRank)',\n        'desc(weight.level)',\n        'asc(weight.position)',\n      ],\n      ranking: [\n        'words',\n        'filters',\n        'typo',\n        'attribute',\n        'proximity',\n        'exact',\n        'custom',\n      ],\n      highlightPreTag: '<span class=\"algolia-docsearch-suggestion--highlight\">',\n      highlightPostTag: '</span>',\n      minWordSizefor1Typo: 3,\n      minWordSizefor2Typos: 7,\n      allowTyposOnNumericTokens: false,\n      minProximity: 1,\n      ignorePlurals: true,\n      advancedSyntax: true,\n      attributeCriteriaComputedByMinProximity: true,\n      removeWordsIfNoResults: 'allOptional',\n    },\n  },\n});\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"pkgdown-template",children:"pkgdown Template"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"pkgdown.js"}),(0,a.jsx)("div",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"new Crawler({\n  appId: 'YOUR_APP_ID',\n  apiKey: 'YOUR_API_KEY',\n  rateLimit: 8,\n  maxDepth: 10,\n  startUrls: [\n    'https://YOUR_WEBSITE_URL/index.html',\n    'https://YOUR_WEBSITE_URL/',\n    'https://YOUR_WEBSITE_URL/reference',\n    'https://YOUR_WEBSITE_URL/articles',\n  ],\n  sitemaps: ['https://YOUR_WEBSITE_URL/sitemap.xml'],\n  exclusionPatterns: [\n    '**/reference/',\n    '**/reference/index.html',\n    '**/articles/',\n    '**/articles/index.html',\n  ],\n  discoveryPatterns: ['https://YOUR_WEBSITE_URL/**'],\n  actions: [\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/index.html**/**'],\n      recordExtractor: ({ $, helpers }) => {\n        // Removing DOM elements we don't want to crawl\n        const toRemove = '.dont-index';\n        $(toRemove).remove();\n\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: '.contents h1',\n              defaultValue: 'YOUR_INDEX_NAME Home page',\n            },\n            lvl1: '.contents h2',\n            lvl2: '.contents h3',\n            lvl3: '.ref-arguments td, .ref-description',\n            content: '.contents p, .contents li, .contents .pre',\n            tags: {\n              defaultValue: ['homepage'],\n            },\n          },\n          indexHeadings: { from: 2, to: 6 },\n          aggregateContent: true,\n        });\n      },\n    },\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/reference**/**'],\n      recordExtractor: ({ $, helpers }) => {\n        // Removing DOM elements we don't want to crawl\n        const toRemove = '.dont-index';\n        $(toRemove).remove();\n\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: '.contents h1',\n            },\n            lvl1: '.contents .name',\n            lvl2: '.ref-arguments th',\n            lvl3: '.ref-arguments td, .ref-description',\n            content: '.contents p, .contents li',\n            tags: {\n              defaultValue: ['reference'],\n            },\n          },\n          indexHeadings: { from: 2, to: 6 },\n          aggregateContent: true,\n        });\n      },\n    },\n    {\n      indexName: 'YOUR_INDEX_NAME',\n      pathsToMatch: ['https://YOUR_WEBSITE_URL/articles**/**'],\n      recordExtractor: ({ $, helpers }) => {\n        // Removing DOM elements we don't want to crawl\n        const toRemove = '.dont-index';\n        $(toRemove).remove();\n\n        return helpers.docsearch({\n          recordProps: {\n            lvl0: {\n              selectors: '.contents h1',\n            },\n            lvl1: '.contents .name',\n            lvl2: '.contents h2, .contents h3',\n            content: '.contents p, .contents li',\n            tags: {\n              defaultValue: ['articles'],\n            },\n          },\n          indexHeadings: { from: 2, to: 6 },\n          aggregateContent: true,\n        });\n      },\n    },\n  ],\n  initialIndexSettings: {\n    YOUR_INDEX_NAME: {\n      attributesForFaceting: ['type', 'lang'],\n      attributesToRetrieve: [\n        'hierarchy',\n        'content',\n        'anchor',\n        'url',\n        'url_without_anchor',\n      ],\n      attributesToHighlight: ['hierarchy', 'content'],\n      attributesToSnippet: ['content:10'],\n      camelCaseAttributes: ['hierarchy', 'content'],\n      searchableAttributes: [\n        'unordered(hierarchy.lvl0)',\n        'unordered(hierarchy.lvl1)',\n        'unordered(hierarchy.lvl2)',\n        'unordered(hierarchy.lvl3)',\n        'unordered(hierarchy.lvl4)',\n        'unordered(hierarchy.lvl5)',\n        'unordered(hierarchy.lvl6)',\n        'content',\n      ],\n      distinct: true,\n      attributeForDistinct: 'url',\n      customRanking: [\n        'desc(weight.pageRank)',\n        'desc(weight.level)',\n        'asc(weight.position)',\n      ],\n      ranking: [\n        'words',\n        'filters',\n        'typo',\n        'attribute',\n        'proximity',\n        'exact',\n        'custom',\n      ],\n      highlightPreTag: '<span class=\"algolia-docsearch-suggestion--highlight\">',\n      highlightPostTag: '</span>',\n      minWordSizefor1Typo: 3,\n      minWordSizefor2Typos: 7,\n      allowTyposOnNumericTokens: false,\n      minProximity: 1,\n      ignorePlurals: true,\n      advancedSyntax: true,\n      attributeCriteriaComputedByMinProximity: true,\n      removeWordsIfNoResults: 'allOptional',\n      separatorsToIndex: '_',\n    },\n  },\n});\n"})})})]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(6540);const a={},i=r.createContext(a);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);