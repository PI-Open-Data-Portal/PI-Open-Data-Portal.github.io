"use strict";(self.webpackChunk_docsearch_website=self.webpackChunk_docsearch_website||[]).push([[626],{7479:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>i});const l=JSON.parse('{"id":"record-extractor","title":"Record Extractor","description":"Introduction","source":"@site/docs/record-extractor.md","sourceDirName":".","slug":"/record-extractor","permalink":"/docs/record-extractor","draft":false,"unlisted":false,"editUrl":"https://github.com/PI-Open-Data-Portal/PI-Open-Data-Portal.github.io/edit/main/docs/record-extractor.md","tags":[],"version":"current","lastUpdatedBy":"brunotavaresz","lastUpdatedAt":1740179180000,"frontMatter":{"title":"Record Extractor"},"sidebar":"docs","previous":{"title":"Migrating from DocSearch v2","permalink":"/docs/migrating-from-v2"},"next":{"title":"Config Templates","permalink":"/docs/templates"}}');var o=n(4848),t=n(8453);const s={title:"Record Extractor"},c=void 0,a={},i=[{value:"Introduction",id:"introduction",level:2},{value:"Useful links",id:"useful-links",level:3},{value:"Usage",id:"usage",level:2},{value:"Manipulate the DOM with Cheerio",id:"manipulate-the-dom-with-cheerio",level:3},{value:"Provide fallback selectors",id:"provide-fallback-selectors",level:3},{value:"Provide raw text (<code>defaultValue</code>)",id:"provide-raw-text-defaultvalue",level:3},{value:"Indexing content for faceting",id:"indexing-content-for-faceting",level:3},{value:"Boost search results with <code>pageRank</code>",id:"boost-search-results-with-pagerank",level:3},{value:"Reduce the number of records",id:"reduce-the-number-of-records",level:3},{value:"Reduce the record size",id:"reduce-the-record-size",level:3},{value:"<code>recordProps</code> API Reference",id:"recordprops-api-reference",level:2},{value:"<code>lvl0</code>",id:"lvl0",level:3},{value:"<code>lvl1</code>, <code>content</code>",id:"lvl1-content",level:3},{value:"<code>lvl2</code>, <code>lvl3</code>, <code>lvl4</code>, <code>lvl5</code>, <code>lvl6</code>",id:"lvl2-lvl3-lvl4-lvl5-lvl6",level:3},{value:"<code>pageRank</code>",id:"pagerank",level:3},{value:"Custom variables",id:"custom-variables",level:3},{value:"<code>helpers.docsearch</code> API Reference",id:"helpersdocsearch-api-reference",level:2},{value:"<code>aggregateContent</code>",id:"aggregatecontent",level:3},{value:"<code>recordVersion</code>",id:"recordversion",level:3},{value:"<code>indexHeadings</code>",id:"indexheadings",level:3}];function d(e){const r={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(r.admonition,{type:"info",children:(0,o.jsxs)(r.p,{children:["This documentation will only contain information regarding the ",(0,o.jsx)(r.strong,{children:"helpers.docsearch"})," method, see ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.a,{href:"https://www.algolia.com/doc/tools/crawler/getting-started/overview/",children:"Algolia Crawler Documentation"})})," for more information on the ",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.a,{href:"https://www.algolia.com/products/search-and-discovery/crawler/",children:"Algolia Crawler"})}),"."]})}),"\n",(0,o.jsxs)(r.p,{children:["Pages are extracted by a ",(0,o.jsx)(r.a,{href:"https://www.algolia.com/doc/tools/crawler/apis/configuration/actions/#parameter-param-recordextractor",children:(0,o.jsx)(r.code,{children:"recordExtractor"})}),". These extractors are assigned to ",(0,o.jsx)(r.a,{href:"https://www.algolia.com/doc/tools/crawler/apis/configuration/actions/",children:(0,o.jsx)(r.code,{children:"actions"})})," via the ",(0,o.jsx)(r.a,{href:"https://www.algolia.com/doc/tools/crawler/apis/configuration/actions/#parameter-param-recordextractor",children:(0,o.jsx)(r.code,{children:"recordExtractor"})})," parameter. This parameter links to a function that returns the data you want to index, organized in an array of JSON objects."]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.em,{children:"The helpers are a collection of functions to help you extract content and generate Algolia records."})}),"\n",(0,o.jsx)(r.h3,{id:"useful-links",children:"Useful links"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:(0,o.jsx)(r.a,{href:"https://www.algolia.com/doc/tools/crawler/guides/extracting-data/#extracting-records",children:"Extracting records with the Algolia Crawler"})}),"\n",(0,o.jsx)(r.li,{children:(0,o.jsxs)(r.a,{href:"https://www.algolia.com/doc/tools/crawler/apis/configuration/actions/#parameter-param-recordextractor-2",children:[(0,o.jsx)(r.code,{children:"recordExtractor"})," parameters"]})}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(r.p,{children:["The most common way to use the DocSearch helper, is to return its result to the ",(0,o.jsx)(r.a,{href:"https://www.algolia.com/doc/tools/crawler/apis/configuration/actions/#parameter-param-recordextractor",children:(0,o.jsx)(r.code,{children:"recordExtractor"})})," function."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'recordExtractor: ({ helpers }) => {\n  return helpers.docsearch({\n    recordProps: {\n      lvl0: {\n        selectors: "header h1",\n      },\n      lvl1: "article h2",\n      lvl2: "article h3",\n      lvl3: "article h4",\n      lvl4: "article h5",\n      lvl5: "article h6",\n      content: "main p, main li",\n    },\n  });\n},\n'})}),"\n",(0,o.jsx)(r.h3,{id:"manipulate-the-dom-with-cheerio",children:"Manipulate the DOM with Cheerio"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.a,{href:"https://cheerio.js.org/",children:(0,o.jsx)(r.code,{children:"Cheerio instance ($)"})})," allows you to manipulate the DOM:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'recordExtractor: ({ $, helpers }) => {\n  // Removing DOM elements we don\'t want to crawl\n  $(".my-warning-message").remove();\n\n  return helpers.docsearch({\n    recordProps: {\n      lvl0: {\n        selectors: "header h1",\n      },\n      lvl1: "article h2",\n      lvl2: "article h3",\n      lvl3: "article h4",\n      lvl4: "article h5",\n      lvl5: "article h6",\n      content: "main p, main li",\n    },\n  });\n},\n'})}),"\n",(0,o.jsx)(r.h3,{id:"provide-fallback-selectors",children:"Provide fallback selectors"}),"\n",(0,o.jsx)(r.p,{children:"Fallback selectors can be useful when retrieving content that might not exist in some pages:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'recordExtractor: ({ $, helpers }) => {\n  return helpers.docsearch({\n    recordProps: {\n      // `.exists h1` will be selected if `.exists-probably h1` does not exists.\n      lvl0: {\n        selectors: [".exists-probably h1", ".exists h1"],\n      }\n      lvl1: "article h2",\n      lvl2: "article h3",\n      lvl3: "article h4",\n      lvl4: "article h5",\n      lvl5: "article h6",\n      // `.exists p, .exists li` will be selected.\n      content: [\n        ".does-not-exists p, .does-not-exists li",\n        ".exists p, .exists li",\n      ],\n    },\n  });\n},\n'})}),"\n",(0,o.jsxs)(r.h3,{id:"provide-raw-text-defaultvalue",children:["Provide raw text (",(0,o.jsx)(r.code,{children:"defaultValue"}),")"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsxs)(r.em,{children:["Only the ",(0,o.jsx)(r.code,{children:"lvl0"})," and ",(0,o.jsx)(r.a,{href:"/docs/record-extractor#indexing-content-for-faceting",children:"custom variables"})," selectors support this option"]})}),"\n",(0,o.jsxs)(r.p,{children:["You might want to structure your search results differently than your website, or provide a ",(0,o.jsx)(r.code,{children:"defaultValue"})," to a potentially non-existent selector:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'recordExtractor: ({ $, helpers }) => {\n  return helpers.docsearch({\n    recordProps: {\n      lvl0: {\n        // It also supports the fallback DOM selectors syntax!\n        selectors: ".exists-probably h1",\n        defaultValue: "myRawTextIfDoesNotExists",\n      },\n      lvl1: "article h2",\n      lvl2: "article h3",\n      lvl3: "article h4",\n      lvl4: "article h5",\n      lvl5: "article h6",\n      content: "main p, main li",\n      // The variables below can be used to filter your search\n      language: {\n        // It also supports the fallback DOM selectors syntax!\n        selectors: ".exists-probably .language",\n        // Since custom variables are used for filtering, we allow sending\n        // multiple raw values\n        defaultValue: ["en", "en-US"],\n      },\n    },\n  });\n},\n'})}),"\n",(0,o.jsx)(r.h3,{id:"indexing-content-for-faceting",children:"Indexing content for faceting"}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsxs)(r.em,{children:["These selectors also support ",(0,o.jsx)(r.a,{href:"#provide-raw-text-defaultvalue",children:(0,o.jsx)(r.code,{children:"defaultValue"})})," and ",(0,o.jsx)(r.a,{href:"#provide-fallback-selectors",children:"fallback selectors"})]})}),"\n",(0,o.jsxs)(r.p,{children:["You might want to index content that will be used as filters in your frontend (e.g. ",(0,o.jsx)(r.code,{children:"version"})," or ",(0,o.jsx)(r.code,{children:"lang"}),"), you can defined any custom variable to the ",(0,o.jsx)(r.code,{children:"recordProps"})," object to add them to your Algolia records:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'recordExtractor: ({ helpers }) => {\n  return helpers.docsearch({\n    recordProps: {\n      lvl0: {\n        selectors: "header h1",\n      },\n      lvl1: "article h2",\n      lvl2: "article h3",\n      lvl3: "article h4",\n      lvl4: "article h5",\n      lvl5: "article h6",\n      content: "main p, main li",\n      // The variables below can be used to filter your search\n      foo: ".bar",\n      language: {\n        // It also supports the fallback DOM selectors syntax!\n        selectors: ".does-not-exists",\n        // Since custom variables are used for filtering, we allow sending\n        // multiple raw values\n        defaultValue: ["en", "en-US"],\n      },\n      version: {\n        // You can send raw values without `selectors`\n        defaultValue: ["latest", "stable"],\n      },\n    },\n  });\n},\n'})}),"\n",(0,o.jsxs)(r.p,{children:["The following ",(0,o.jsx)(r.code,{children:"version"}),", ",(0,o.jsx)(r.code,{children:"lang"})," and ",(0,o.jsx)(r.code,{children:"foo"})," attributes will be available in your records:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-json",children:'foo: "valueFromBarSelector",\nlanguage: ["en", "en-US"],\nversion: ["latest", "stable"]\n'})}),"\n",(0,o.jsxs)(r.p,{children:["You can now use them to ",(0,o.jsx)(r.a,{href:"/docs/docsearch-v3/#filtering-your-search",children:"filter your search in the frontend"})]}),"\n",(0,o.jsxs)(r.h3,{id:"boost-search-results-with-pagerank",children:["Boost search results with ",(0,o.jsx)(r.code,{children:"pageRank"})]}),"\n",(0,o.jsxs)(r.p,{children:["This parameter allows you to boost records using a custom ranking attribute built from the current ",(0,o.jsx)(r.code,{children:"pathsToMatch"}),". Pages with highest ",(0,o.jsx)(r.a,{href:"#pagerank",children:(0,o.jsx)(r.code,{children:"pageRank"})})," will be returned before pages with a lower ",(0,o.jsx)(r.a,{href:"#pagerank",children:(0,o.jsx)(r.code,{children:"pageRank"})}),". The default value is 0 and you can pass any numeric value ",(0,o.jsx)(r.strong,{children:"as a string"}),", including negative values."]}),"\n",(0,o.jsxs)(r.p,{children:["Search results are sorted by weight (desc), so you can have both boosted and non boosted results. The weight of each result will be computed for a given query based on multiple factors: match level, position, etc. and the pageRank value will be added to this final weight. The pageRank on its own may not be enough to influence the results of your query depending on how your ",(0,o.jsx)(r.a,{href:"https://www.algolia.com/doc/guides/managing-results/relevance-overview/in-depth/ranking-criteria/",children:"overall ranking is set up"}),". If changing the pageRank value doesn't influence your search results enough, even with large values, move weight.pageRank higher in the Ranking and Sorting page for your index."]}),"\n",(0,o.jsx)(r.p,{children:'You can view the computed weight directly from the Algolia dashboard (dashboard.algolia.com->search->perform a search->mouse hover over the "ranking criteria" icon bottom right of each record). That will give you an idea of what pageRank value is acceptable for your case.'}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'{\n  indexName: "YOUR_INDEX_NAME",\n  pathsToMatch: ["https://YOUR_WEBSITE_URL/api/**"],\n  recordExtractor: ({ $, helpers, url }) => {\n    const isDocPage = /\\/[\\w-]+\\/docs\\//.test(url.pathname);\n    const isBlogPage = /\\/[\\w-]+\\/blog\\//.test(url.pathname);\n    return helpers.docsearch({\n      recordProps: {\n        lvl0: {\n          selectors: "header h1",\n        },\n        lvl1: "article h2",\n        lvl2: "article h3",\n        lvl3: "article h4",\n        lvl4: "article h5",\n        lvl5: "article h6",\n        content: "article p, article li",\n        pageRank: isDocPage ? "-2000" : isBlogPage ? "-1000" : "0",\n      },\n    });\n  },\n},\n'})}),"\n",(0,o.jsx)(r.h3,{id:"reduce-the-number-of-records",children:"Reduce the number of records"}),"\n",(0,o.jsxs)(r.p,{children:["If you encounter the ",(0,o.jsx)(r.code,{children:"Extractors returned too many records"})," error when your page outputs more than 750 records. The ",(0,o.jsx)(r.a,{href:"#aggregatecontent",children:(0,o.jsx)(r.code,{children:"aggregateContent"})})," option helps you reducing the number of records at the ",(0,o.jsx)(r.code,{children:"content"})," level of the extractor."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'{\n  indexName: "YOUR_INDEX_NAME",\n  pathsToMatch: ["https://YOUR_WEBSITE_URL/api/**"],\n  recordExtractor: ({ $, helpers }) => {\n    return helpers.docsearch({\n      recordProps: {\n        lvl0: {\n          selectors: "header h1",\n        },\n        lvl1: "article h2",\n        lvl2: "article h3",\n        lvl3: "article h4",\n        lvl4: "article h5",\n        lvl5: "article h6",\n        content: "article p, article li",\n      },\n      aggregateContent: true,\n    });\n  },\n},\n'})}),"\n",(0,o.jsx)(r.h3,{id:"reduce-the-record-size",children:"Reduce the record size"}),"\n",(0,o.jsxs)(r.p,{children:["If you encounter the ",(0,o.jsx)(r.code,{children:"Records extracted are too big"})," error when crawling your website, it's mostly because there was too many informations in your records, or that your page is too big. The ",(0,o.jsx)(r.a,{href:"#recordversion",children:(0,o.jsx)(r.code,{children:"recordVersion"})})," option helps you reducing the records size by removing informations that are only used with ",(0,o.jsx)(r.a,{href:"/docs/legacy/dropdown",children:"DocSearch v2"}),"."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'{\n  indexName: "YOUR_INDEX_NAME",\n  pathsToMatch: ["https://YOUR_WEBSITE_URL/api/**"],\n  recordExtractor: ({ $, helpers }) => {\n    return helpers.docsearch({\n      recordProps: {\n        lvl0: {\n          selectors: "header h1",\n        },\n        lvl1: "article h2",\n        lvl2: "article h3",\n        lvl3: "article h4",\n        lvl4: "article h5",\n        lvl5: "article h6",\n        content: "article p, article li",\n      },\n      recordVersion: "v3",\n    });\n  },\n},\n'})}),"\n",(0,o.jsxs)(r.h2,{id:"recordprops-api-reference",children:[(0,o.jsx)(r.code,{children:"recordProps"})," API Reference"]}),"\n",(0,o.jsx)(r.h3,{id:"lvl0",children:(0,o.jsx)(r.code,{children:"lvl0"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"type: Lvl0"})," | ",(0,o.jsx)(r.strong,{children:"required"})]}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:"type Lvl0 = {\n  selectors: string | string[];\n  defaultValue?: string;\n};\n"})}),"\n",(0,o.jsxs)(r.h3,{id:"lvl1-content",children:[(0,o.jsx)(r.code,{children:"lvl1"}),", ",(0,o.jsx)(r.code,{children:"content"})]}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"type: string | string[]"})," | ",(0,o.jsx)(r.strong,{children:"required"})]}),"\n"]}),"\n",(0,o.jsxs)(r.h3,{id:"lvl2-lvl3-lvl4-lvl5-lvl6",children:[(0,o.jsx)(r.code,{children:"lvl2"}),", ",(0,o.jsx)(r.code,{children:"lvl3"}),", ",(0,o.jsx)(r.code,{children:"lvl4"}),", ",(0,o.jsx)(r.code,{children:"lvl5"}),", ",(0,o.jsx)(r.code,{children:"lvl6"})]}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"type: string | string[]"})," | ",(0,o.jsx)(r.strong,{children:"optional"})]}),"\n"]}),"\n",(0,o.jsx)(r.h3,{id:"pagerank",children:(0,o.jsx)(r.code,{children:"pageRank"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"type: number"})," | ",(0,o.jsx)(r.strong,{children:"optional"})]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["See the ",(0,o.jsx)(r.a,{href:"#boost-search-results-with-pagerank",children:"live example"})]}),"\n",(0,o.jsx)(r.h3,{id:"custom-variables",children:"Custom variables"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"type: string | string[] | CustomVariable"})," | ",(0,o.jsx)(r.strong,{children:"optional"})]}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:"type CustomVariable =\n  | {\n      defaultValue: string | string[];\n    }\n  | {\n      selectors: string | string[];\n      defaultValue?: string | string[];\n    };\n"})}),"\n",(0,o.jsxs)(r.p,{children:["Custom variables are used to ",(0,o.jsx)(r.a,{href:"/docs/docsearch-v3#filtering-your-search",children:(0,o.jsx)(r.code,{children:"filter your search"})}),", you can define them in the ",(0,o.jsx)(r.a,{href:"#indexing-content-for-faceting",children:(0,o.jsx)(r.code,{children:"recordProps"})})]}),"\n",(0,o.jsxs)(r.h2,{id:"helpersdocsearch-api-reference",children:[(0,o.jsx)(r.code,{children:"helpers.docsearch"})," API Reference"]}),"\n",(0,o.jsx)(r.h3,{id:"aggregatecontent",children:(0,o.jsx)(r.code,{children:"aggregateContent"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"type: boolean"})," | default: ",(0,o.jsx)(r.code,{children:"true"})," | ",(0,o.jsx)(r.strong,{children:"optional"})]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"#reduce-the-number-of-records",children:"This option"})," groups the Algolia records created at the ",(0,o.jsx)(r.code,{children:"content"})," level of the selector into a single record for its matching heading."]}),"\n",(0,o.jsx)(r.h3,{id:"recordversion",children:(0,o.jsx)(r.code,{children:"recordVersion"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"type: 'v3' | 'v2'"})," | default: ",(0,o.jsx)(r.code,{children:"v2"})," | ",(0,o.jsx)(r.strong,{children:"optional"})]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["This option remove content from the Algolia records that are only used for ",(0,o.jsx)(r.a,{href:"/docs/legacy/dropdown",children:"DocSearch v2"}),". If you are using ",(0,o.jsx)(r.a,{href:"/docs/docsearch-v3",children:"the latest version of DocSearch"}),", you can ",(0,o.jsxs)(r.a,{href:"#reduce-the-record-size",children:["set it to ",(0,o.jsx)(r.code,{children:"v3"})]}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"indexheadings",children:(0,o.jsx)(r.code,{children:"indexHeadings"})}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"type: boolean | { from: number, to: number }"})," | default: ",(0,o.jsx)(r.code,{children:"true"})," | ",(0,o.jsx)(r.strong,{children:"optional"})]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["This option tells the crawler if the ",(0,o.jsx)(r.code,{children:"headings"})," (",(0,o.jsx)(r.code,{children:"lvlX"}),") should be indexed."]}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["When ",(0,o.jsx)(r.code,{children:"false"}),", only records for the ",(0,o.jsx)(r.code,{children:"content"})," level will be created."]}),"\n",(0,o.jsxs)(r.li,{children:["When ",(0,o.jsx)(r.code,{children:"from, to"})," is provided, only records for the ",(0,o.jsx)(r.code,{children:"lvlX"})," to ",(0,o.jsx)(r.code,{children:"lvlY"})," will be created."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var l=n(6540);const o={},t=l.createContext(o);function s(e){const r=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),l.createElement(t.Provider,{value:r},e.children)}}}]);